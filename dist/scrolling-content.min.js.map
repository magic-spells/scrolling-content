{"version":3,"file":"scrolling-content.min.js","sources":["../src/scrolling-content.js"],"sourcesContent":["// <scrolling-track>\nclass ScrollingTrack extends HTMLElement {\n  connectedCallback() {\n    this.style.display = 'flex';\n    this.style.flexWrap = 'nowrap';\n    this.style.alignItems = 'center';\n    this.style.gap = 'var(--scrolling-content-gap, 1rem)';\n    this.style.cursor = 'pointer';\n    this.style.touchAction = 'pan-y';\n    if (this.dataset.gap) this.style.gap = `${parseFloat(this.dataset.gap)}px`;\n  }\n}\ncustomElements.define('scrolling-track', ScrollingTrack);\n\n// <scrolling-item>\nclass ScrollingItem extends HTMLElement {\n  connectedCallback() {\n    this.style.display = 'flex';\n    this.style.alignItems = 'center';\n    this.style.gap = 'var(--scrolling-content-gap, 1rem)';\n    if (this.dataset.pad) this.style.padding = `${parseFloat(this.dataset.pad)}px`;\n  }\n}\ncustomElements.define('scrolling-item', ScrollingItem);\n\n// <scrolling-content>\nclass ScrollingContent extends HTMLElement {\n  static get observedAttributes() {\n    return ['data-mobile-speed', 'data-desktop-speed', 'data-breakpoint'];\n  }\n\n  constructor() {\n    super();\n    const _ = this;\n    _.track = null;\n    _.items = [];\n    _.mobileSpeed = 40;\n    _.desktopSpeed = 60;\n    _.breakpoint = 767;\n    _.isRunning = false;\n    _.isHoverPaused = false;\n    _.isDragging = false;\n    _.prevTime = 0;\n    _.offsetX = 0;\n    _.dragStartX = 0;\n    _.dragStartY = 0; // track initial Y position for direction detection\n    _.startOffset = 0;\n    _.containerWidth = 0;\n    _.loopDistance = 0; // distance to move before wrapping back to start\n    _.rafId = null;\n    _.recalculateLayout = _.throttle(() => _.doRecalculateLayout(), 5);\n    _.resizeHandler = () => _.handleResize();\n    _.focusHandler = () => _.handleFocus();\n    _.touchDirection = 0; // 0: unknown, 1: horizontal, -1: vertical\n    _.directionThreshold = 3; // pixels of movement before determining direction\n  }\n\n  throttle(func, delay) {\n    let timeoutId;\n    return (...args) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func.apply(this, args), delay);\n    };\n  }\n\n  connectedCallback() {\n    const _ = this;\n    _.initElements();\n    _.readAttributes();\n    // using requestAnimationFrame here causes a\n    // width calculation error - so don't use it here!\n    setTimeout(() => {\n      _.checkTrackWidth();\n      _.attachEvents();\n      _.start();\n    }, 5);\n  }\n\n  attributeChangedCallback(name, oldV, newV) {\n    if (oldV === newV) return;\n    this.readAttributes();\n    if (!this.isHoverPaused && !this.isDragging) {\n      this.stop();\n      this.start();\n    }\n  }\n\n  initElements() {\n    const _ = this;\n    _.style.overflow = 'hidden';\n    _.track = _.querySelector('scrolling-track');\n    if (!_.track) {\n      _.track = document.createElement('scrolling-track');\n      while (_.firstChild) _.track.appendChild(_.firstChild);\n      _.appendChild(_.track);\n    }\n\n    // Check if content is already wrapped in scrolling-item\n    const existingItem = _.track.querySelector('scrolling-item');\n    if (!existingItem) {\n      // Wrap all track content in a single scrolling-item\n      const item = document.createElement('scrolling-item');\n      while (_.track.firstChild) {\n        item.appendChild(_.track.firstChild);\n      }\n      _.track.appendChild(item);\n    }\n\n    _.items = Array.from(_.track.children);\n    Object.assign(_.track.style, {\n      display: 'flex',\n      willChange: 'transform',\n    });\n    _.containerWidth = _.getBoundingClientRect().width;\n  }\n\n  readAttributes() {\n    const _ = this;\n    const getNum = (attr, fallback) =>\n      isNaN(parseFloat(_.getAttribute(attr))) ? fallback : parseFloat(_.getAttribute(attr));\n    _.mobileSpeed = getNum('data-mobile-speed', _.mobileSpeed);\n    _.desktopSpeed = getNum('data-desktop-speed', _.desktopSpeed);\n    _.breakpoint = getNum('data-breakpoint', _.breakpoint);\n  }\n\n  /**\n   * duplicates items until track is at least 200% of container width\n   */\n  checkTrackWidth() {\n    const _ = this;\n    if (!_.items.length) return;\n\n    // get the width of the first item (since all items are the same)\n    const itemWidth = _.items[0].getBoundingClientRect().width;\n\n    // get gap from CSS variable or track style\n    const computedStyle = getComputedStyle(_.track);\n    const gap = parseFloat(computedStyle.gap) || 0;\n\n    // store the distance we need to move before wrapping back to start\n    // this is the width of one item plus one gap\n    _.loopDistance = itemWidth + gap;\n\n    // calculate how many items we need to fill 200% of container\n    const itemsNeeded = Math.ceil((_.containerWidth * 2) / itemWidth) + 1;\n\n    // only duplicate if we need more items\n    const currentCount = _.items.length;\n    for (let i = currentCount; i < itemsNeeded; i++) {\n      const clone = _.items[0].cloneNode(true);\n      _.track.appendChild(clone);\n    }\n\n    // update items array with all children\n    _.items = Array.from(_.track.children);\n  }\n\n  attachEvents() {\n    const _ = this;\n    _.addEventListener('mouseenter', () => {\n      _.isHoverPaused = true;\n      _.stop();\n    });\n    _.addEventListener('mouseleave', () => {\n      _.isHoverPaused = false;\n      if (!_.isDragging) _.start();\n    });\n\n    // Touch events for better mobile support\n    _.track.addEventListener('touchstart', (e) => _.onTouchStart(e), { passive: false });\n    _.track.addEventListener('touchmove', (e) => _.onTouchMove(e), { passive: false });\n    _.track.addEventListener('touchend', (e) => _.onTouchEnd(e));\n    _.track.addEventListener('touchcancel', (e) => _.onTouchEnd(e));\n\n    // Pointer events for desktop/mouse\n    _.track.addEventListener('pointerdown', (e) => _.onPointerDown(e));\n    window.addEventListener('pointermove', (e) => _.onPointerMove(e));\n    window.addEventListener('pointerup', (e) => _.onPointerUp(e));\n    window.addEventListener('pointercancel', (e) => _.onPointerUp(e));\n    window.addEventListener('resize', _.resizeHandler);\n    window.addEventListener('focus', _.focusHandler);\n  }\n\n  start() {\n    const _ = this;\n    if (_.isRunning) return;\n    _.isRunning = true;\n    _.prevTime = performance.now();\n    _.rafId = requestAnimationFrame((ts) => _.tick(ts));\n  }\n\n  stop() {\n    const _ = this;\n    if (!_.isRunning) return;\n    cancelAnimationFrame(_.rafId);\n    _.isRunning = false;\n    _.rafId = null;\n  }\n\n  /**\n   * main animation loop\n   * @param {number} ts - timestamp from requestAnimationFrame\n   */\n  tick(ts) {\n    const _ = this;\n    if (!_.isRunning) return;\n\n    // calculate time delta\n    const delta = (ts - _.prevTime) / 1000;\n    _.prevTime = ts;\n\n    // move left by speed * delta\n    _.offsetX -= _.getCurrentSpeed() * delta;\n\n    // wrap around when we've moved past one complete loop distance\n    // this creates the infinite loop illusion\n    if (_.offsetX <= -_.loopDistance) {\n      _.offsetX += _.loopDistance;\n    }\n\n    // apply the transform\n    _.track.style.transform = `translateX(${_.offsetX}px)`;\n\n    // continue animation\n    _.rafId = requestAnimationFrame((t) => _.tick(t));\n  }\n\n  getCurrentSpeed() {\n    return window.innerWidth <= this.breakpoint ? this.mobileSpeed : this.desktopSpeed;\n  }\n\n  onTouchStart(e) {\n    const _ = this;\n    if (e.touches.length !== 1) return; // only handle single touch\n\n    _.isDragging = true;\n    _.dragStartX = e.touches[0].screenX;\n    _.dragStartY = e.touches[0].screenY;\n    _.startOffset = _.offsetX;\n    _.touchDirection = 0; // reset direction\n    _.stop();\n  }\n\n  onTouchMove(e) {\n    const _ = this;\n    if (!_.isDragging || e.touches.length !== 1) return;\n\n    // if already determined to be horizontal, prevent default and scroll\n    if (_.touchDirection === 1) {\n      e.preventDefault();\n      const diffX = e.touches[0].screenX - _.dragStartX;\n\n      _.offsetX = _.startOffset + diffX;\n      while (_.offsetX <= -_.loopDistance) _.offsetX += _.loopDistance;\n      while (_.offsetX > 0) _.offsetX -= _.loopDistance;\n      _.track.style.transform = `translateX(${_.offsetX}px)`;\n      return;\n    }\n\n    // calculate movement distances to determine direction\n    const deltaX = Math.abs(_.dragStartX - e.touches[0].screenX);\n    const deltaY = Math.abs(_.dragStartY - e.touches[0].screenY);\n\n    // determine direction with bias toward horizontal (like your carousel)\n    if (\n      deltaX * 1.15 > deltaY &&\n      (deltaX > _.directionThreshold || deltaY > _.directionThreshold)\n    ) {\n      // horizontal movement detected\n      _.touchDirection = 1;\n      e.preventDefault();\n      return;\n    } else if (deltaY > _.directionThreshold && deltaX <= deltaY) {\n      // vertical movement detected - cancel drag and allow page scroll\n      _.touchDirection = -1;\n      _.isDragging = false;\n      if (!_.isHoverPaused) _.start();\n      return;\n    }\n\n    // direction not yet determined - prevent default to avoid premature page scroll\n    e.preventDefault();\n  }\n\n  onTouchEnd() {\n    const _ = this;\n    if (!_.isDragging) return;\n    _.isDragging = false;\n    _.touchDirection = 0;\n    if (!_.isHoverPaused) _.start();\n  }\n\n  onPointerDown(e) {\n    const _ = this;\n    // Skip if this is a touch event (handled by touch handlers)\n    if (e.pointerType === 'touch') return;\n\n    _.isDragging = true;\n    _.dragStartX = e.clientX;\n    _.dragStartY = e.clientY; // store initial Y position\n    _.startOffset = _.offsetX;\n    _.touchDirection = 0; // reset direction detection\n    _.stop();\n    _.track.setPointerCapture(e.pointerId);\n  }\n\n  onPointerMove(e) {\n    const _ = this;\n    if (!_.isDragging) return;\n    // Skip if this is a touch event (handled by touch handlers)\n    if (e.pointerType === 'touch') return;\n\n    // calculate movement distances\n    const diffX = e.clientX - _.dragStartX;\n\n    _.offsetX = _.startOffset + diffX;\n\n    // normalize offset to stay within bounds\n    while (_.offsetX <= -_.loopDistance) _.offsetX += _.loopDistance;\n    while (_.offsetX > 0) _.offsetX -= _.loopDistance;\n\n    _.track.style.transform = `translateX(${_.offsetX}px)`;\n  }\n\n  onPointerUp(e) {\n    const _ = this;\n    if (!_.isDragging) return;\n    // Skip if this is a touch event (handled by touch handlers)\n    if (e.pointerType === 'touch') return;\n\n    _.isDragging = false;\n    _.touchDirection = 0; // reset direction\n    try {\n      _.track.releasePointerCapture(e.pointerId);\n    } catch {\n      // Ignore errors if pointer capture was already released\n    }\n    if (!_.isHoverPaused) _.start();\n  }\n\n  doRecalculateLayout() {\n    const _ = this;\n    setTimeout(() => {\n      _.containerWidth = _.getBoundingClientRect().width;\n      _.checkTrackWidth();\n\n      // normalize offset position with new dimensions\n      _.offsetX = _.offsetX % _.loopDistance;\n      while (_.offsetX <= -_.loopDistance) _.offsetX += _.loopDistance;\n      while (_.offsetX > 0) _.offsetX -= _.loopDistance;\n\n      _.track.style.transform = `translateX(${_.offsetX}px)`;\n\n      // restart animation if not paused by user interaction\n      if (!_.isHoverPaused && !_.isDragging) {\n        _.start();\n      }\n    }, 1);\n  }\n\n  handleResize() {\n    const _ = this;\n    const newW = _.getBoundingClientRect().width;\n    if (newW === _.containerWidth) return;\n    _.recalculateLayout();\n  }\n\n  handleFocus() {\n    this.recalculateLayout();\n  }\n}\ncustomElements.define('scrolling-content', ScrollingContent);\n"],"names":["ScrollingTrack","HTMLElement","connectedCallback","this","style","display","flexWrap","alignItems","gap","cursor","touchAction","dataset","parseFloat","customElements","define","ScrollingItem","pad","padding","ScrollingContent","observedAttributes","constructor","super","_","track","items","mobileSpeed","desktopSpeed","breakpoint","isRunning","isHoverPaused","isDragging","prevTime","offsetX","dragStartX","dragStartY","startOffset","containerWidth","loopDistance","rafId","recalculateLayout","throttle","doRecalculateLayout","resizeHandler","handleResize","focusHandler","handleFocus","touchDirection","directionThreshold","func","delay","timeoutId","args","clearTimeout","setTimeout","apply","initElements","readAttributes","checkTrackWidth","attachEvents","start","attributeChangedCallback","name","oldV","newV","stop","overflow","querySelector","document","createElement","firstChild","appendChild","item","Array","from","children","Object","assign","willChange","getBoundingClientRect","width","getNum","attr","fallback","isNaN","getAttribute","length","itemWidth","computedStyle","getComputedStyle","itemsNeeded","Math","ceil","i","clone","cloneNode","addEventListener","e","onTouchStart","passive","onTouchMove","onTouchEnd","onPointerDown","window","onPointerMove","onPointerUp","performance","now","requestAnimationFrame","ts","tick","cancelAnimationFrame","delta","getCurrentSpeed","transform","t","innerWidth","touches","screenX","screenY","preventDefault","diffX","deltaX","abs","deltaY","pointerType","clientX","clientY","setPointerCapture","pointerId","releasePointerCapture"],"mappings":"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"}